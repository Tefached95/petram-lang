-- File: bracket_nesting_demo.petra

func #{main :: args: List<String>}#: () ->
    -- Define a nested list of numbers
    $nested_numbers := {|
        {|1, 2, 3|},
        {|4, 5, 6|},
        {|7, 8, 9|}
    |}  -- Type inferred as List<List<Int>>

    -- Accessing elements in nested lists
    $first_element := #{nested_numbers[0][0]}#  -- Should be 1
    $second_element := #{nested_numbers[1][1]}#  -- Should be 5
    $third_element := #{nested_numbers[2][2]}#  -- Should be 9

    -- Print the accessed elements
    #{print(message: "First element: {$first_element}")}#
    #{print(message: "Second element: {$second_element}")}#
    #{print(message: "Third element: {$third_element}")}#

    -- Define a nested struct
    struct #{Outer}# ->
        field inner: Inner

        new #{inner: Inner}#: Self ->
            @inner = inner

        struct #{Inner}# ->
            field value: Int

            new #{value: Int}#: Self ->
                @value = value

    -- Instantiate the nested struct
    $outer := #{Outer::new :: inner: #{Outer::Inner::new :: value: 42}#}#

    -- Access the nested value
    $nested_value := #{outer.inner.value}#

    -- Print the nested value
    #{print(message: "Nested value: {$nested_value}")}#

    ()






    