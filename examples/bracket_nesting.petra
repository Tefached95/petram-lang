-- File: bracket_nesting_demo.petra

func main(args: List<String>): Int
    -- Define a nested list of numbers
    -- Type inferred as List<List<Int>>
    var nested_numbers = {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    }

    -- Accessing elements in nested lists
    var first_element = nested_numbers[0][0]  -- Should be 1
    var second_element = nested_numbers[1][1]  -- Should be 5
    var third_element = nested_numbers[2][2]  -- Should be 9

    -- Print the accessed elements
    println(message: "First element: {first_element}")
    println(message: "Second element: {second_element}")
    println(message: "Third element: {third_element}")

    -- Define a nested struct
    struct Outer
        inner: Inner
        
        struct Inner
            value: Int
        end
    end

    -- Instantiate the nested struct
    var outer = Outer::new(inner: Outer::Inner::new(value: 42))

    -- Access the nested value
    var nested_value = outer.inner.value

    -- Print the nested value
    println(message: "Nested value: {nested_value}")

    return 0
end

func Outer::new(inner: Outer::Inner): Outer
    return Outer{ inner: inner }
end

func Outer::Inner::new(value: Int): Outer::Inner
    return Outer::Inner{ value: value }
end
