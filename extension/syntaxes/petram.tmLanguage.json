{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Petram",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#structs"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#types"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-dash.petram",
          "match": "--.*$"
        },
        {
          "name": "comment.block.petram",
          "begin": "\\{-",
          "end": "-\\}"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.petram",
          "match": "\\b(func|struct|method|new|if|else|return|match|constrain|where|and|or|not)\\b(?![-_a-zA-Z0-9])"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "match": "(func)\\s+(#\\[([^\\]]+)\\]#)\\s*(:)\\s*([^→]+)(→|=>)",
          "captures": {
            "1": {
              "name": "keyword.control.petram"
            },
            "2": {
              "name": "meta.function.declaration.petram"
            },
            "3": {
              "name": "entity.name.function.petram"
            },
            "4": {
              "name": "keyword.operator.petram"
            },
            "5": {
              "name": "meta.function.return-type.petram"
            },
            "6": {
              "name": "keyword.operator.petram"
            }
          }
        }
      ]
    },
    "structs": {
      "patterns": [
        {
          "match": "(struct)\\s+(#\\[([^\\]]+)\\]#)",
          "captures": {
            "1": {
              "name": "keyword.control.petram"
            },
            "2": {
              "name": "meta.struct.declaration.petram"
            },
            "3": {
              "name": "entity.name.type.struct.petram"
            }
          }
        },
        {
          "match": "\\b(field|constrain)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*:",
          "captures": {
            "1": {
              "name": "keyword.control.petram"
            },
            "2": {
              "name": "variable.other.member.petram"
            }
          }
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.petram",
          "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
        },
        {
          "name": "variable.other.constant.petram",
          "match": "@[a-zA-Z_][a-zA-Z0-9_]*"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.petram",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.petram",
          "match": "\\\\."
        }
      ]
    },
    "numbers": {
      "name": "constant.numeric.petram",
      "match": "\\b([0-9]+(\\.?[0-9]*)|\\.?[0-9]+)\\b"
    },
    "types": {
      "patterns": [
        {
          "match": "\\b(Int|Float|String|Bool|List|Option|Result|Void)\\b(?![-_a-zA-Z0-9])",
          "name": "storage.type.petram"
        },
        {
          "match": "\\b[A-Z][a-zA-Z]*(?:Error)?\\b(?![-_a-zA-Z0-9])",
          "name": "support.type.petram"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.petram",
          "match": "(?<![A-Za-z])(::=|::|\\.=|=|→|=>|\\+|-|\\*|/|%|==|!=|<|>|<=|>=)(?![A-Za-z])"
        }
      ]
    }
  },
  "scopeName": "source.petra"
}